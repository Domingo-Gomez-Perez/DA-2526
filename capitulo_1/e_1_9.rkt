#lang racket

;Each of the following two procedures defines a
;method for adding two positive integers in terms of the procedures
;`inc`, which increments its argument by 1, and `dec`, which decrements
;its argument by 1.
(define (inc x) (+ x 1))
(define (dec x) (- x 1))

;RECURSIVE PROCEDURE
(define (plus-rec a b)
  (if (= a 0) 
      b 
      (inc (plus-rec (dec a) b))))

;ITERATIVE PROCEDURE
(define (plus-iter a b)
  (if (= a 0) 
      b 
      (plus-iter (dec a) (inc b))))

;Using the substitution model, illustrate the process generated by each
;procedure in evaluating `(plus 4 5)`.  Are these processes iterative or
;recursive?

;ANSWER

;The first procedure is recursive, this is because we have to use the stack
;to save the calls made, because we need to operate with the value with the
;next call. We have to go back in every call to get to the final result

;With this procedure (plus-rec 4 5) would be:
;(plus-rec 4 5)
;→ (inc (plus-rec 3 5))
;→ (inc (inc (plus-rec 2 5)))
;→ (inc (inc (inc (plus-rec 1 5))))
;→ (inc (inc (inc (inc (plus-rec 0 5)))))
;→ (inc (inc (inc (inc 5))))
;→ 9

;The second procedure is iterative. Each call is substituted by a different call, but
;no calls have to be saved in the stack, there is simply a substitution, no operations
;are done that involved resolving a previous call.

;With this procedure (plus-iter 4 5) would be
;(plus-iter 4 5)
;→ (plus-iter 3 6)
;→ (plus-iter 2 7)
;→ (plus-iter 1 8)
;→ (plus-iter 0 9)
;→ 9